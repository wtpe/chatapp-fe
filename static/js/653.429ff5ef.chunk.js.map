{"version":3,"file":"static/js/653.429ff5ef.chunk.js","mappings":"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","sources":["../node_modules/phosphor-react/src/icons/GoogleLogo.tsx","../node_modules/phosphor-react/src/icons/GithubLogo.tsx","../node_modules/phosphor-react/src/icons/TwitterLogo.tsx","sections/auth/AuthSocial.js","sections/auth/LoginForm.js","pages/auth/Login.js"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm0,184A80,80,0,1,1,184.6,71.4a8,8,0,0,1,0,11.3,7.9,7.9,0,0,1-11.3,0A64.1,64.1,0,1,0,191.5,136H128a8,8,0,0,1,0-16h72a8,8,0,0,1,8,8A80.1,80.1,0,0,1,128,208Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GoogleLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGoogleLogo.displayName = \"GoogleLogo\";\n\nexport default GoogleLogo;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M224,224a8,8,0,0,1-8,8,32.1,32.1,0,0,1-32-32v-8a16,16,0,0,0-16-16H156v40a16,16,0,0,0,16,16,8,8,0,0,1,0,16,32.1,32.1,0,0,1-32-32V176H116v40a32.1,32.1,0,0,1-32,32,8,8,0,0,1,0-16,16,16,0,0,0,16-16V176H88a16,16,0,0,0-16,16v8a32.1,32.1,0,0,1-32,32,8,8,0,0,1,0-16,16,16,0,0,0,16-16v-8a32.1,32.1,0,0,1,14.8-27A55.8,55.8,0,0,1,48,120v-8a58,58,0,0,1,7.7-28.3A59.9,59.9,0,0,1,61.1,36,7.8,7.8,0,0,1,68,32a59.7,59.7,0,0,1,48,24h24a59.7,59.7,0,0,1,48-24,7.8,7.8,0,0,1,6.9,4,59.9,59.9,0,0,1,5.4,47.7A58,58,0,0,1,208,112v8a55.8,55.8,0,0,1-22.8,45A32.1,32.1,0,0,1,200,192v8a16,16,0,0,0,16,16A8,8,0,0,1,224,224Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GithubLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGithubLogo.displayName = \"GithubLogo\";\n\nexport default GithubLogo;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M245.7,77.7l-30.2,30.1C209.5,177.7,150.5,232,80,232c-14.5,0-26.5-2.3-35.6-6.8-7.3-3.7-10.3-7.6-11.1-8.8a8,8,0,0,1,3.9-11.9c.2-.1,23.8-9.1,39.1-26.4a108.6,108.6,0,0,1-24.7-24.4c-13.7-18.6-28.2-50.9-19.5-99.1a8.1,8.1,0,0,1,5.5-6.2,8,8,0,0,1,8.1,1.9c.3.4,33.6,33.2,74.3,43.8V88a48.3,48.3,0,0,1,48.6-48,48.2,48.2,0,0,1,41,24H240a8,8,0,0,1,7.4,4.9A8.4,8.4,0,0,1,245.7,77.7Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst TwitterLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nTwitterLogo.displayName = \"TwitterLogo\";\n\nexport default TwitterLogo;\n","import { Divider, IconButton, Stack } from '@mui/material'\r\nimport { GithubLogo, GoogleLogo, TwitterLogo } from 'phosphor-react'\r\nimport React from 'react'\r\n\r\nconst AuthSocial = () => {\r\n  return (\r\n    <div>\r\n      <Divider sx={{my:2.5, typography: 'overline', color:' text.disabled', '&:: before,::after' : {borderTopStyle:'dashed'}}}>OR</Divider>\r\n    <Stack direction='row' justifyContent='center' spacing={2} >\r\n        <IconButton>\r\n            <GoogleLogo color='#DF3E30'/>\r\n        </IconButton>\r\n        <IconButton>\r\n            <GithubLogo color='black'/>\r\n        </IconButton>\r\n        <IconButton>\r\n            <TwitterLogo color='#1C9CEA'/>\r\n        </IconButton>\r\n    </Stack>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthSocial\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  Link,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { Eye, EyeSlash } from \"phosphor-react\";\r\nimport { useTheme } from \"@emotion/react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst LoginForm = () => {\r\n  const [showpw, setShowpw] = useState(false);\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email must be a valid email address\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  const defaultValues = {\r\n    email: \"abc123@gmail.com\",\r\n    password: \"123456\",\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(LoginSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      //submit\r\n      console.log(data);\r\n      // dispatch(LoginUser(data))\r\n    } catch (error) {\r\n      console.error(error);\r\n      reset();\r\n      setError(\"afterSubmit\", {\r\n        ...error,\r\n        message: error.message,\r\n      });\r\n    }\r\n  };\r\n  const theme = useTheme();\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        {!!errors.afterSubmit && (\r\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\r\n        )}\r\n\r\n        <TextField name=\"email\" label=\"Email address\" \r\n        required='true'\r\n        />\r\n        <TextField\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type={showpw ? \"text\" : \"password\"}\r\n          InputProps={{\r\n            endAdorment: (\r\n              <InputAdornment>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setShowpw(!showpw);\r\n                  }}\r\n                >\r\n                  {showpw ? <Eye /> : <EyeSlash />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n\r\n        {/* <RHFTextField name=\"email\" label=\"Email address\" />\r\n        //         <RHFTextField name='password' label='Password' type={showpw ? 'text' : 'password'} InputProps={{\r\n        //     endAdorment:(\r\n        //         <InputAdornment>\r\n        //             <IconButton onClick={()=>{\r\n        //                 setShowpw(!showpw);\r\n        //             }}>\r\n        //                 {showpw ? <Eye/>: <EyeSlash/>}\r\n        //             </IconButton>\r\n        //         </InputAdornment>\r\n        //     )\r\n        // }} /> */}\r\n      </Stack>\r\n\r\n      <Stack alignItems=\"flex-end\" sx={{ my: 2 }}>\r\n        <Link\r\n          component={RouterLink}\r\n          to=\"/auth/reset-password\"\r\n          variant=\"body2\"\r\n          color=\"inherit\"\r\n          underline=\"always\"\r\n        >\r\n          Forgot password ?\r\n        </Link>\r\n      </Stack>\r\n      <Link component={RouterLink} to=\"/app\" variant=\"subtitle2\">\r\n        <Button\r\n          fullWidth\r\n          color=\"inherit\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          sx={{\r\n            bgcolor: \"text.primary\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n            \" &:hover\": {\r\n              bgcolor: \"text.primary\",\r\n              color: (theme) =>\r\n                theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n            },\r\n          }}\r\n        >\r\n          Login\r\n        </Button>\r\n      </Link>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { Link, Stack, Typography } from '@mui/material'\r\nimport React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport AuthSocial from '../../sections/auth/AuthSocial'\r\nimport LoginForm from '../../sections/auth/LoginForm'\r\n\r\nconst Login = () => {\r\n  return (\r\n    <Stack spacing={2} sx={{mb:5,position:'relative'}} >\r\n        <Typography variant='h4' >\r\n            Login to Talk\r\n        </Typography>\r\n        <Stack direction='row' spacing={0.5} >\r\n\r\n        \r\n        <Typography variant='body2'  >\r\n            New User?\r\n        </Typography>\r\n        <Link to='/auth/register' component={RouterLink} variant='subtitle2' >\r\n            Create an account\r\n        </Link>\r\n        </Stack>\r\n        {/* Login form */}\r\n        <LoginForm/>\r\n        {/* Auth Social */}\r\n        <AuthSocial/>\r\n    </Stack>\r\n\r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"names":["pathsByWeight","Map","set","color","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","renderPath","weight","renderPathForWeight","GoogleLogo","forwardRef","props","ref","IconBase","displayName","opacity","GithubLogo","TwitterLogo","Divider","sx","my","typography","borderTopStyle","Stack","direction","justifyContent","spacing","IconButton","useState","showpw","setShowpw","LoginSchema","Yup","shape","email","required","password","methods","useForm","resolver","yupResolver","defaultValues","reset","setError","handleSubmit","errors","formState","onSubmit","data","console","log","error","message","useTheme","afterSubmit","Alert","severity","TextField","name","label","type","InputProps","endAdorment","InputAdornment","onClick","alignItems","Link","component","RouterLink","to","variant","underline","Button","fullWidth","size","bgcolor","theme","palette","mode","mb","position","Typography"],"sourceRoot":""}