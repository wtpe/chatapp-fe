{"version":3,"file":"static/js/176.4d35e658.chunk.js","mappings":"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","sources":["hook-form/FormProvider.js","sections/auth/NewPasswordForm.js","pages/auth/NewPassword.js","../node_modules/phosphor-react/src/icons/CaretLeft.tsx"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { FormProvider as Form } from \"react-hook-form\";\r\n\r\nFormProvider.propTypes = {\r\n  children: PropTypes.node,\r\n  methods: PropTypes.object,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nconst FormProvider = ({ children, onSubmit, methods }) => {\r\n  return (\r\n    <Form {...methods}>\r\n      <form onSubmit={onSubmit}>{children}</form>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormProvider;\r\n","import React from 'react'\r\nimport FormProvider from '../../hook-form/FormProvider'\r\nimport * as Yup from 'yup'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { useState } from 'react'\r\nimport { Alert, Button, IconButton, InputAdornment, Link, Stack, TextField } from '@mui/material'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { Eye, EyeSlash } from 'phosphor-react'\r\nimport { useTheme } from '@emotion/react'\r\n\r\nconst NewPasswordForm = () => {\r\n    const [showpw, setShowpw] = useState(false);\r\n    const NewPasswordSchema = Yup.object().shape({\r\n        newPassword: Yup.string().min(6, 'Password must be at least 6 characters').required(\"Password is required\"),\r\n        confirmPassword: Yup.string().required('Password is required').oneOf([Yup.ref('newPassword'), null], 'Password must match'),\r\n    })\r\n\r\n    const defaultValues = {\r\n        newPassword: '',\r\n        confirmpassword: ''\r\n    }\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(NewPasswordSchema),\r\n        defaultValues,\r\n    });\r\n\r\n    const { reset, setError, handleSubmit, formState: { errors, isSubmitting, isSubmitSuccessful } } = methods;\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            //submit\r\n        } catch (error) {\r\n            console.log(error);\r\n            reset();\r\n            setError('afterSubmit', {\r\n                ...error,\r\n                message: error.message,\r\n            })\r\n        }\r\n    }\r\n    const theme = useTheme();\r\n    return (\r\n        <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <Stack spacing={3}>\r\n                {!!errors.afterSubmit && <Alert severity='error'>{errors.afterSubmit.message}</Alert>}\r\n\r\n                <TextField name='newPassword' label='New Password' type={showpw ? 'text' : 'password'} InputProps={{\r\n                    endAdorment: (\r\n                        <InputAdornment>\r\n                            <IconButton onClick={() => {\r\n                                setShowpw(!showpw);\r\n                            }}>\r\n                                {showpw ? <Eye /> : <EyeSlash />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }} ></TextField  >\r\n\r\n                <TextField name='confirmPassword' label='Confirm Password' type={showpw ? 'text' : 'password'} InputProps={{\r\n                    endAdorment: (\r\n                        <InputAdornment>\r\n                            <IconButton onClick={() => {\r\n                                setShowpw(!showpw);\r\n                            }}>\r\n                                {showpw ? <Eye /> : <EyeSlash />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }} ></TextField  >\r\n\r\n                {/* <RHFTextField name=\"email\" label=\"Email address\" /> */}\r\n                {/* <RHFTextField name='password' label='Password' type={showpw ? 'text' : 'password'} InputProps={{\r\n            endAdorment:(\r\n                <InputAdornment>\r\n                    <IconButton onClick={()=>{\r\n                        setShowpw(!showpw);\r\n                    }}>\r\n                        {showpw ? <Eye/>: <EyeSlash/>}\r\n                    </IconButton>\r\n                </InputAdornment>\r\n            )\r\n        }} /> */}\r\n            </Stack>\r\n\r\n            \r\n            <Button fullWidth color='inherit' size='large' type='submit' variant='contained' sx={{\r\n                bgcolor: 'text.primary', color: (theme) => theme.palette.mode === 'light' ? 'common.white' : 'grey.800', ' &:hover': {\r\n                    bgcolor: 'text.primary',\r\n                    color: (theme) => theme.palette.mode === 'light' ? 'common.white' : 'grey.800'\r\n                }\r\n            }} >\r\n                Submit\r\n            </Button>\r\n        </FormProvider>\r\n    )\r\n}\r\n\r\nexport default NewPasswordForm\r\n","import { Link, Stack, Typography } from '@mui/material'\r\nimport { CaretLeft } from 'phosphor-react'\r\nimport React from 'react'\r\nimport NewPasswordForm from '../../sections/auth/NewPasswordForm'\r\nimport {Link as RouterLink} from 'react-router-dom'\r\n\r\nconst NewPassword = () => {\r\n  return (\r\n    <>\r\n    <Stack spacing={2} sx={{mb:5,position:'relative'}}>\r\n        <Typography variant='h3' paragraph>\r\n            Reset Password\r\n        </Typography>\r\n        <Typography sx={{color:'text.secondary',mb:5}} >\r\n            Please set your new password\r\n        </Typography>\r\n    </Stack>\r\n        <NewPasswordForm/>\r\n        {/*  NewPasswordForm */}\r\n    <Link component={RouterLink} to='auth/login' color='inherit' variant='subititle' sx={{mt:3,mx:'auto',alignItems:'center',display:'inline-flex'}}>\r\n        <CaretLeft />\r\n        Return to sign in\r\n    </Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPassword\r\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon points=\"160 208 80 128 160 48 160 208\" opacity=\"0.2\" />\n    <polygon\n      points=\"160 208 80 128 160 48 160 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M163.1,40.6a8.4,8.4,0,0,0-8.8,1.7l-80,80a8.1,8.1,0,0,0,0,11.4l80,80A8.3,8.3,0,0,0,160,216a8.5,8.5,0,0,0,3.1-.6A8,8,0,0,0,168,208V48A8,8,0,0,0,163.1,40.6Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst CaretLeft = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCaretLeft.displayName = \"CaretLeft\";\n\nexport default CaretLeft;\n"],"names":["children","onSubmit","methods","useState","showpw","setShowpw","NewPasswordSchema","Yup","shape","newPassword","min","required","confirmPassword","oneOf","useForm","resolver","yupResolver","defaultValues","confirmpassword","handleSubmit","reset","setError","formState","errors","isSubmitting","isSubmitSuccessful","data","useTheme","Stack","spacing","afterSubmit","Alert","severity","message","TextField","name","label","type","InputProps","endAdorment","InputAdornment","IconButton","onClick","Button","fullWidth","color","size","variant","sx","bgcolor","theme","palette","mode","mb","position","Typography","paragraph","Link","component","RouterLink","to","mt","mx","alignItems","display","pathsByWeight","Map","set","React","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","opacity","d","renderPath","weight","renderPathForWeight","CaretLeft","forwardRef","props","ref","IconBase","displayName"],"sourceRoot":""}