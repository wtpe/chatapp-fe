{"version":3,"file":"static/js/643.d32add8c.chunk.js","mappings":"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","sources":["components/ChatElement.js","components/Search/Search.js","components/Search/SearchIconWrapper.js","components/Search/StyledBaseInput.js","pages/dashboard/Chats.js","sections/main/CreatGroup.js","pages/dashboard/Group.js"],"sourcesContent":["import { useTheme } from \"@emotion/react\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport { Avatar, Badge, Box, Stack, Typography } from \"@mui/material\";\r\nimport { StyledBadge } from \"../pages/dashboard/Chats\";\r\n\r\nconst ChatElement = ({ id, name, img, msg, time, unread, online }) => {\r\n    const theme = useTheme();\r\n    return (\r\n      <Box sx={{ width: '100%', borderRadius: 1, backgroundColor: theme.palette.mode === 'light' ? '#fff' : theme.palette.background.paper }} p={2}>\r\n        <Stack direction='row' alignItems='center' justifyContent='space-between'>\r\n          <Stack direction='row' spacing={2}>\r\n            {online ? <StyledBadge overlap='circular' anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }} variant='dot'>\r\n              <Avatar src={faker.image.avatar()} />\r\n            </StyledBadge> : <Avatar src={faker.image.avatar()} />}\r\n  \r\n  \r\n            <Stack spacing={0.3}>\r\n              <Typography variant='subtitle2'>\r\n                {name}\r\n              </Typography >\r\n              <Typography variant='caption'>\r\n                {msg}\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack alignItems='center' spacing={2} >\r\n            <Typography sx={{ fontWeight: 1000 }} variant='caption'>\r\n              {time}\r\n            </Typography>\r\n            <Badge color='primary' badgeContent={unread}></Badge>\r\n          </Stack>\r\n        </Stack>\r\n  \r\n      </Box>\r\n    )\r\n  }\r\n\r\nexport default ChatElement;","import { alpha, styled } from \"@mui/material\";\r\n\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: 20,\r\n    backgroundColor: alpha(theme.palette.background.paper, 1),\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\"\r\n  }))\r\n\r\n  export default Search;","import { styled } from \"@mui/material\";\r\n\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  \r\n  }))\r\n\r\n  export default SearchIconWrapper","import { InputBase, styled } from \"@mui/material\";\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`, width: '100%'\r\n    }\r\n  }))\r\n\r\nexport default StyledInputBase;","import { Badge, Box, Button, Divider, IconButton,  Stack, Typography, styled } from '@mui/material'\r\nimport { ArchiveBox, CircleDashed, MagnifyingGlass } from 'phosphor-react'\r\nimport { ChatList } from '../../data'\r\nimport React from 'react'\r\nimport { useTheme } from '@emotion/react'\r\nimport { SimpleBarStyle } from '../../components/Scrollbar'\r\nimport Search from '../../components/Search/Search'\r\nimport SearchIconWrapper from '../../components/Search/SearchIconWrapper'\r\nimport StyledInputBase from '../../components/Search/StyledBaseInput'\r\nimport ChatElement from '../../components/ChatElement'\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  '& .MuiBadge-badge': {\r\n    backgroundColor: '#44b700',\r\n    color: '#44b700',\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    '&::after': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      borderRadius: '50%',\r\n      animation: 'ripple 1.2s infinite ease-in-out',\r\n      border: '1px solid currentColor',\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  '@keyframes ripple': {\r\n    '0%': {\r\n      transform: 'scale(.8)',\r\n      opacity: 1,\r\n    },\r\n    '100%': {\r\n      transform: 'scale(2.4)',\r\n      opacity: 0,\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst Chats = () => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Box sx={{ position: 'relative', width: 320, backgroundColor: theme.palette.mode === 'light' ? \"#F8FAFF\" : theme.palette.background.default, boxShadow: '0px 0px 2px rgba(0, 0, 0, 0.25)' }}>\r\n      <Stack p={3} spacing={2} sx={{ height: \"100vh\" }}>\r\n        <Stack direction='row' alignItems='center' justifyContent='space-between' >\r\n          <Typography variant='h5'>\r\n            Chats\r\n          </Typography>\r\n          <IconButton>\r\n            <CircleDashed />\r\n          </IconButton>\r\n        </Stack>\r\n        <Stack>\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <MagnifyingGlass color='#709CE6' />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase placeholder='Search' />\r\n          </Search>\r\n        </Stack>\r\n        <Stack spacing={1}>\r\n\r\n          <Stack direction='row' alignItems='center' spacing={1.5}>\r\n            <ArchiveBox size={24} />\r\n            <Button>Archive</Button>\r\n          </Stack>\r\n          <Divider />\r\n        </Stack>\r\n\r\n        <Stack direction='column' sx={{ flexGrow: 1, overflow: 'auto', height: '100%' }}>\r\n          \r\n          <SimpleBarStyle >\r\n            <Stack spacing={0.5}>\r\n              <Typography variant='subtitle2' sx={{}}>\r\n                Pinned\r\n              </Typography>\r\n              {ChatList.filter((e) => e.pinned).map((e) => {\r\n                return <ChatElement {...e} />\r\n              })}\r\n            </Stack>\r\n\r\n            <Stack spacing={0.5}>\r\n              <Typography variant='subtitle2' sx={{}}>\r\n                All Chats\r\n              </Typography>\r\n              {ChatList.filter((e) => !e.pinned).map((e) => {\r\n                return <ChatElement {...e} />\r\n              })}\r\n            </Stack>\r\n          </SimpleBarStyle>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport {StyledBadge}\r\n\r\nexport default Chats\r\n","import {\r\n  Autocomplete,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Slide,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport * as Yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst MEMBERS = [\"Name 1\", \"Name 2\", \"Name 3\"];\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst CreateGroupForm = ({ handleClose }) => {\r\n  const NewGroupSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"Title is required\"),\r\n    members: Yup.array().min(2, \"Must have at least 2 members\"),\r\n  });\r\n\r\n  const defaultValues = {\r\n    title: \"\",\r\n    members: [],\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(NewGroupSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { isSubmitting, isValid },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      console.log(\"data\", data);\r\n    } catch (er) {\r\n      console.log(\"error\", er);\r\n    }\r\n  };\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [value, setValues] = React.useState(\"abc\");\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        {/* <RHFTextField name='title' label='Title' /> */}\r\n        {/* <RHFAutocomplete name='member' label='Members' multiple/> */}\r\n        <TextField name=\"title\" label=\"Title\" />\r\n        <Autocomplete\r\n          name=\"member\"\r\n          label=\"Members\"\r\n          multiple\r\n          freeSolo\r\n          options={MEMBERS}\r\n          ChipProps={{ size: \"medium\" }}\r\n          renderInput={(params) => <TextField {...params} label=\"Members\" />}\r\n        />\r\n\r\n        <Stack\r\n          spacing={2}\r\n          direction={\"row\"}\r\n          alignItems=\"center\"\r\n          justifyContent=\"end\"\r\n        >\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button type=\"submit\" variant=\"contained\">\r\n            Create\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nconst CreatGroup = ({ open, handleClose }) => {\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-describedby=\"alert-dialog-slide-p=decription\"\r\n      sx={{ p: 4 }}\r\n    >\r\n      {/* title */}\r\n      <DialogTitle>Create New Group</DialogTitle>\r\n      {/* COntent */}\r\n      <DialogContent sx={{ mt: 4 }}>\r\n        {/* Form */}\r\n        <CreateGroupForm handleClose={handleClose} />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CreatGroup;\r\n","import { Box, Divider, IconButton, Stack, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport Search from \"../../components/Search/Search\";\r\nimport SearchIconWrapper from \"../../components/Search/SearchIconWrapper\";\r\nimport { MagnifyingGlass, Plus } from \"phosphor-react\";\r\nimport StyledInputBase from \"../../components/Search/StyledBaseInput\";\r\nimport { useTheme } from \"@emotion/react\";\r\nimport { SimpleBarStyle } from \"../../components/Scrollbar\";\r\nimport { ChatList } from \"../../data\";\r\nimport ChatElement from \"../../components/ChatElement\";\r\nimport CreatGroup from \"../../sections/main/CreatGroup\";\r\n\r\nconst Group = () => {\r\n  const theme = useTheme();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Stack direction=\"row\" sx={{ width: \"100%\" }}>\r\n        {/* left */}\r\n        <Box\r\n          sx={{\r\n            height: \"100vh\",\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F8FAFF\"\r\n                : theme.palette.background.default,\r\n            width: 320,\r\n            boxShadow: \"0px 0px 2px rgba(0,0,0,0.25)\",\r\n          }}\r\n        >\r\n          <Stack p={3} spacing={2} sx={{ height: \"100vh\" }}>\r\n            <Stack>\r\n              <Typography variant=\"h5\">Groups</Typography>\r\n            </Stack>\r\n            <Stack sx={{ width: \"100%\" }}>\r\n              <Search>\r\n                <SearchIconWrapper>\r\n                  <MagnifyingGlass color=\"#709CE6\" />\r\n                </SearchIconWrapper>\r\n                <StyledInputBase\r\n                  placeholder=\"Search...\"\r\n                  inputProps={{ \"aria-label\": \"search\" }}\r\n                ></StyledInputBase>\r\n              </Search>\r\n            </Stack>\r\n            <Stack\r\n              direction=\"row\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Typography variant=\"subtitle2\">Create New Group</Typography>\r\n              <IconButton\r\n                onClick={() => {\r\n                  setOpenDialog(true);\r\n                }}\r\n              >\r\n                <Plus style={{ color: theme.palette.primary.main }} />\r\n              </IconButton>\r\n            </Stack>\r\n            <Divider />\r\n            <Stack sx={{ flexGrow: 1, overflow: \"auto\", height: \"100%\" }}>\r\n              <SimpleBarStyle timeout={500} clickOnTrack={false}>\r\n                <Stack spacing={1}>\r\n                  <Typography>Pinned</Typography>\r\n                  {/* Chat List */}\r\n                  {ChatList.filter((e) => e.pinned).map((e) => {\r\n                    return <ChatElement {...e} />;\r\n                  })}\r\n                </Stack>\r\n                <Stack spacing={1}>\r\n                  <Typography variant=\"subtitle2\" color=\"#676667\">\r\n                    All Groups\r\n                  </Typography>\r\n                  {/* Chat List */}\r\n                  {ChatList.filter((e) => !e.pinned).map((e) => {\r\n                    return <ChatElement {...e} />;\r\n                  })}\r\n                </Stack>\r\n              </SimpleBarStyle>\r\n            </Stack>\r\n          </Stack>\r\n        </Box>\r\n        {/* right */}\r\n      </Stack>\r\n      {openDialog && (\r\n        <CreatGroup open={openDialog} handleClose={handleCloseDialog} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n"],"names":["id","name","msg","img","time","unread","online","theme","useTheme","sx","width","borderRadius","backgroundColor","palette","mode","background","paper","p","direction","alignItems","justifyContent","spacing","overlap","anchorOrigin","vertical","horizontal","variant","src","faker","fontWeight","color","badgeContent","Search","styled","position","alpha","marginRight","marginLeft","SearchIconWrapper","padding","height","pointerEvents","display","StyledInputBase","InputBase","paddingLeft","StyledBadge","Badge","boxShadow","top","left","animation","border","content","transform","opacity","default","placeholder","size","flexGrow","overflow","ChatList","e","pinned","map","MEMBERS","Transition","React","props","ref","Slide","CreateGroupForm","handleClose","NewGroupSchema","Yup","shape","title","required","members","min","methods","useForm","resolver","yupResolver","defaultValues","handleSubmit","reset","watch","setValue","formState","onSubmit","isSubmitting","isValid","data","console","log","er","Stack","TextField","label","Autocomplete","multiple","freeSolo","options","ChipProps","renderInput","params","Button","onClick","type","open","Dialog","fullWidth","maxWidth","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","mt","useState","openDialog","setOpenDialog","Box","Typography","inputProps","IconButton","style","primary","main","Divider","timeout","clickOnTrack","ChatElement"],"sourceRoot":""}